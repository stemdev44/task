<!-- /sections/recipe.liquid -->

{% capture default_show_filters %}
  {%- unless section.settings.hide_sidebar -%}
    filters--default-visible
  {%- endunless -%}
{% endcapture %}

<div data-section-id="{{ section.id }}"
  data-section-type="collection"
  data-sort="{{ section.settings.collection_sorting }}">

  <div class="collection" data-sidebar-toggle>
    <div class="wrapper">

      {%- assign collection_sidebar = false -%}
      {%- if section.blocks != blank  -%}
        {%- assign collection_sidebar = true -%}
      {%- endif -%}

      {% if collection_sidebar or section.settings.collection_sorting or section.settings.enable_layout_toggle %}
        <nav class="collection__nav">

          <div class="collection__nav__buttons">
            {% if collection_sidebar %}
              {% capture current_tags_indicator %}
                {% if current_tags %}
                  <div class="badge">{{ current_tags | size }}</div>
                {% endif %}
              {% endcapture %}
              <button class="collection__filters__toggle {{ default_show_filters }}" data-filters-toggle="filters">
                <span class="hide-filters">{{ 'collections.sidebar.hide_filters' | t }}</span>
                <span class="show-filters">{{ 'collections.sidebar.filter' | t }}</span>
                {{ current_tags_indicator }}
                {% render 'icon-filter' %}
              </button>
            {% endif %}
            {% if section.settings.collection_sorting %}
              <div class="collection__sort" style="display:none">
                {% render 'collection-sorting', collection: collection %}
              </div>
            {% endif %}
          </div>
          {% if section.settings.enable_layout_toggle %}
            <div class="collection__layout" style="display:none">
              <span data-toggle-grid="1">{% render 'icon-grid-1' %}</span>
              <span data-toggle-grid="2">{% render 'icon-grid-2' %}</span>
              <span data-toggle-grid="3">{% render 'icon-grid-3' %}</span>
              <!-- <span data-toggle-grid="4">{% render 'icon-grid-4' %}</span> -->
            </div>
          {% endif %}
        </nav>
      {% endif %}

      <div class="collection__content">
        {% if collection_sidebar %}
        <aside class="collection__filters__wrapper {{ default_show_filters }}" data-filters="filters" data-default-hide="{{ section.settings.hide_sidebar }}">
          <div class="collection__filters">
            <button data-filters-toggle="filters" class="filters__close" aria-label="{{ 'general.accessibility.close' | t }}"></button>
            <div class="collection__filters__inner">
              {% render 'collection-filters-sidebar', section: section, collection: collection %}
            </div>
          </div>
          <span class="collection__underlay" data-filters-underlay></span>
        </aside>
        {% endif %}


          <div class="collection__products">
            <div >
              <!-- /snippets/product-grid-item.liquid -->
             
                 {% for block in section.blocks %}
                  <div class="RecipeTabB1 recipe_tab_title" id="id{{ forloop.index }}">
                    {% if block.settings.blog.articles_count > 0 %}
                      <div class="recipe_tab_title">
                        <!-- <h2>{{ block.settings.title }}</h2> -->
                      </div>
                    {% endif %}
                    <div class="RecipeGrid js-grid" data-grid-large="3" data-grid-small="{{ section.settings.grid_setting_small }}" >                       
                      {% for article in blogs[block.settings.blog].articles %}
                        <a href="{{ article.url }}">
                          <div class="RecipeItem">
                            <div class="RecipeImg">
                              <img src="{{ article.image | img_url : '' }}" alt="">
                            </div>
                            <div class="RecipeDesc">
                              <p class="grid__title">{{ article.title }}</p>
                            </div>
                          </div>
                        </a>
                      {% endfor %}
                    </div>
                  </div>
                {% endfor %}
            </div>

          </div>

      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Recipe",
  "settings": [
    {
      "type": "header",
      "content": "Products per row"
    },
    {
      "type":    "range",
      "id":      "grid_setting_large",
      "min":     1,
      "max":     4,
      "step":    1,
      "label":   "Desktop",
      "default": 4
    },
    {
      "type":    "range",
      "id":      "grid_setting_small",
      "min":     1,
      "max":     3,
      "step":    1,
      "label":   "Mobile",
      "default": 2
    },
    {
      "type":    "range",
      "id":      "product_limit",
      "min":     1,
      "max":     50,
      "step":    1,
      "label":   "Products per page",
      "default": 48
    },
    {
      "type": "checkbox",
      "id": "enable_layout_toggle",
      "label": "Show layout options",
      "default": true
    },
    {
      "type": "header",
      "content": "Collection sorting"
    },
    {
      "type": "checkbox",
      "id": "collection_sorting",
      "label": "Show collection sorting",
      "default": true
    },
    {
       "type": "header",
       "content": "Layout"
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text alignment",
      "default": "align--middle-center",
      "options": [
        { "value": "align--top-left", "label": "Top left"},
        { "value": "align--top-center", "label": "Top center"},
        { "value": "align--top-right", "label": "Top right"},
        { "value": "align--middle-left", "label": "Middle left"},
        { "value": "align--middle-center", "label": "Absolute center"},
        { "value": "align--middle-right", "label": "Middle right"},
        { "value": "align--bottom-left", "label": "Bottom left"},
        { "value": "align--bottom-center", "label": "Bottom center"},
        { "value": "align--bottom-right", "label": "Bottom right"}
      ]
    },
    {
       "type": "checkbox",
       "id": "show_title",
       "label": "Show collection title",
       "default": true
    },
    {
       "type": "checkbox",
       "id": "show_title_below",
       "label": "Title below image",
       "default": false
    },
    {
       "type": "checkbox",
       "id": "show_description",
       "label": "Show collection description",
       "default": true
    },
    {
       "type": "checkbox",
       "id": "show_description_below",
       "label": "Description below image",
       "default": false
    },
    {
      "type": "header",
      "content": "Feature image"
    },
    {
      "type": "checkbox",
      "id": "show_image",
      "label": "Show feature image",
      "default": true
    },
    {
      "type": "select",
      "id": "image_height",
      "label": "Image height",
      "default": "use_screen_one_third",
      "options": [
        { "value": "use_screen_full", "label": "Full screen height"},
        { "value": "use_screen_three_quarters", "label": "Three quarters of screen height"},
        { "value": "use_screen_two_thirds", "label": "Two thirds of screen height"},
        { "value": "use_screen_one_half", "label": "One half of screen height"},
        { "value": "use_screen_one_third", "label": "One third of screen height"},
        { "value": "use_pixels_800", "label": "800px" },
        { "value": "use_pixels_650", "label": "650px" },
        { "value": "use_pixels_500", "label": "500px" },
        { "value": "use_image", "label": "Image height"}
      ]
    },
    {
      "type":    "range",
      "id":      "overlay_opacity",
      "min":     0,
      "max":     100,
      "step":    5,
      "label":   "Image overlay opacity",
      "info":    "Increase contrast for legible text.",
      "default": 20
    },
    {
      "type": "select",
      "id": "color",
      "label": "Text color",
      "default": "palette--contrast--dark",
      "options": [
        { "value": "palette--contrast--dark", "label": "White"},
        { "value": "palette--primary", "label": "Primary accent"},
        { "value": "palette--secondary", "label": "Secondary accent"},
        { "value": " ", "label": "Text color"},
        { "value": "palette--contrast", "label": "Black"},
        { "value": "palette--primary--dark", "label": "Primary dark accent"},
        { "value": "palette--secondary--dark", "label": "Secondary dark accent"},
        { "value": "palette--dark", "label": "Inverted text color"}
      ]
    },
    {
      "type": "header",
      "content": "Collection filters"
    },
    {
      "type": "checkbox",
      "id": "hide_sidebar",
      "label": "Hide filters by default",
      "info": "Customers will have the option to show them"
    },
    {
      "type": "link_list",
      "id": "collection_custom_nav_list",
      "label": "Sidebar nav",
      "info": "Custom list of collections"
    },
    {
      "type": "checkbox",
      "id": "collection_standard_nav",
      "label": "Show collections",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "collection_tag_nav",
      "label": "Show tag filters",
      "default": false
    }
    ],
    "blocks": [
    {
        "type": "blog",
        "name": "Blog",
        "settings": [
            {
                "type": "text",
                "id": "title",
                "label": "Blog Title"
            },
                 {
                "type": "blog",
                "id": "blog",
                "label": "Select Blog"
            }
            
        ]
    }
  ]
}

{% endschema %}

<script>
document.addEventListener("DOMContentLoaded", function () {
  const filterLinks = document.querySelectorAll(".collection-nav .sidebar__item a");
  const recipeTabs = document.querySelectorAll(".RecipeTabB1");
  const sidebarWrapper = document.querySelector(".collection__filters__wrapper");
  const sidebarToggle = document.querySelector(".filters__close");

  function redistributeGridItems() {
    let allItems = [];
    const grids = document.querySelectorAll(".RecipeGrid");
    // Collect all <a> elements from all RecipeGrid divs
    grids.forEach(grid => {
      const items = Array.from(grid.querySelectorAll("a"));
      allItems = allItems.concat(items);
      grid.innerHTML = ""; // Clear the grid
    });

    // Distribute items evenly with 3 per row
    grids.forEach(grid => {
      for (let i = 0; i < 3; i++) {
        if (allItems.length > 0) {
          grid.appendChild(allItems.shift()); // Move items to fill empty spaces
        }
      }
    });
  }

  // Handle filter clicks
  filterLinks.forEach(link => {
    link.addEventListener("click", function (event) {
      event.preventDefault();

      // Remove active class from all links
      filterLinks.forEach(el => el.parentElement.classList.remove("sidebar__item--active"));

      // Add active class to clicked link
      this.parentElement.classList.add("sidebar__item--active");

      // Get the target ID from the href
      const targetId = this.getAttribute("href").replace("#", "");

      if (targetId === "all") {
        // Show all categories if "All" is clicked
        recipeTabs.forEach(tab => tab.style.display = "block");
      } else {
        // Hide all categories
        recipeTabs.forEach(tab => tab.style.display = "none");

        // Show the selected category
        const selectedTab = document.getElementById(targetId);
        if (selectedTab) {
          selectedTab.style.display = "block";
        }
      }

      // Adjust items after filtering
      // setTimeout(redistributeGridItems, 100);
      
      // Close sidebar on mobile
      if (window.innerWidth <= 600) {
        sidebarToggle.click(); 
      }
    });
  });

  // Initial distribution of items
  // redistributeGridItems();
});
</script>

<style>

.RecipeGrid {
    grid-template-columns: 24.5% 24.5% 24.5%;
    justify-content: center;
}

.RecipeItem {
    height: max-content;
    cursor: pointer;
}  

@media screen and (max-width: 600px) {
    .RecipeGrid {
        grid-template-columns: 100% !important;
    }
}

  
</style>